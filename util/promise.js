"use strict";const Promise=require("bluebird"),check=require("check-types");module.exports.allNoErr=(async e=>{if(!Array.isArray(e))throw new Error("Promises is not an array.");return Promise.all(e.map(e=>e.catch(e=>e)))}),module.exports.all=(async e=>{if(!Array.isArray(e))throw new Error("Promises is not an array.");return Promise.all(e.map(e=>e.catch(e=>e))).then(e=>{for(let r of e)if(r instanceof Error)throw r;return e})}),module.exports.mapKeys=(async(e,r)=>{check.assert.object(e,"Invalid object."),check.assert.function(r,"Invalid callback function");let s=[];return Promise.map(Object.keys(e),async e=>Promise.resolve(r(e)).reflect()).each(e=>{if(!e.isFulfilled())throw e.reason();s.push(e.value())}).then(()=>s)}),module.exports.mapProperties=(async(e,r)=>{check.assert.object(e,"Invalid object."),check.assert.function(r,"Invalid callback function");let s=[];return Promise.map(Object.keys(e),async s=>Promise.resolve(r(e[s])).reflect()).each(e=>{if(!e.isFulfilled())throw e.reason();s.push(e.value())}).then(()=>s)});